:root {         /* root for variables */
    /* color palette */
    --strips: #2a2a69;
    --text-light: #b9b8b4;
    --backgrounds: #1f1a1af3;
    --brightborder: #df9100;
    --primary-highlight: #770606;
    --secondary-hightlight: #2a85ec;
}

* {             /* stopping some annoying margin/padding issues */
    margin: 0 auto;
    padding: 0;
}

html {          /* changing html default text pixel size to 10 for easier use of rem */
    font-size: 62.5%;
}

header {        /* header contains h1, an image and also the nav */
    width: 92%; /* only 92% because below side padding */
    padding: 2% 4%; /* padding so stuff isn't stuck to edges */
    display: inline-flex; /* inline flex so stuff isn't growing to fit*/
    align-items: center; /* centering items vertically */
    justify-content: space-between; /* space-between so that nav is on right, name is on left */
    background-color: var(--backgrounds);
    color: var(--text-light);
    border-bottom: 3px solid var(--secondary-hightlight); /* denotes end of header and beginning of content */
}

h1 {
    padding-left: 3%; /* spacing it even further from left so it's more squared with screen, have to do this independently so it doesn't also affect the rest of the elements */
    font-size: 4rem; 
    margin: 0;
    padding: 0; 
}

header img {
    max-height: 200px; /* limiting max dimensions of portrait */
    max-width: 200px;
    border-radius: 50%; /* circular image, like an avatar */
    margin: 0;
    padding: 0;
}

nav {
    margin: 0;
    padding: 0;
    width: 40%; /* nav does't want to be too big */
}

ul {
    display: inline-flex; /* making the list items go in-line */
    width: 100%; /* ul will take up entirety of nav */
    font-size: 2rem;
    list-style: none; /* delete bullets */
}

a {
    text-decoration: none; /* remove link underlines */
    color: var(--text-light); /* color font to contrast */
}

section {
    display: flex; /* allows us to manipulate content how we want */
    align-items: center; /* centers content within their containers */
    background-color: var(--backgrounds);
    color: var(--text-light);
    width: 100%; /* section will fit screen */
    margin: 0;
    padding: 0;
    border-bottom: 3px solid var(--secondary-hightlight); /* denotes end of one section and/or start of another */
}

.section-label {
    width: 18%; /* don't want section labels to take up too much space from content */
    font-size: 3rem; /* bigger text to clearly denote content */
    text-align: right; /* align with border */
    padding-right: 1%; /* space the label from the border a bit */
}

.portfolio-item {
    position: relative; /* necessary for child behaviors */
    margin: 1%; /* spacing between border and items */
    overflow: hidden; /* hides overflow, used for labels on items */
    flex-grow: 1; /* items will grow to fit entirely of width of flex space so there isn't big empty swathes on the page */
    max-height: 500px; /* limits size of items, gets overriden for the first item later */
    opacity: .6; /* overriden by hover, to give emphasis */
}

.container {
    display: flex; /* block display wouldn't work how we want */
    position: relative; /* necessary for child behaviors */
    flex-wrap: wrap; /* flex items force shrink primary or spill off page */
    margin: 0;
    padding: 0;
    width: 82%; /* the remainder of page after label */
    border-left: 3px solid var(--secondary-hightlight); /* denotes label from content */
    font-size: 2rem;
}

.portfolio-item img {
    display: block; /* gets rid of a empty space below image */
    border-radius: 20px; /* rounded edges */
}

.portfolio :nth-child(1) { /* don't want to affect anything beyond the first container */
    max-height: 100%; /* this one is special so it gets to have its full space */
    width: 100%; /* this one is special so it gets to have its full space */
}

.portfolio-item span {      /* labels for items */
    font-size: 2.5rem;
    position: absolute; /* absolute positioning and next two attributes to give it offset/overlap with image */
    top: 15%;
    left: -20%; /* my expectation here was to need to use a positive number to offset from left side but it seems to be offsetting from center. is this because item itself is centered? */
    background-color: var(--primary-highlight); /* label's color */
    color: var(--text-light); /* label's text color */
    transform: rotate(-30deg); /* rotate the label so it looks like a ribbon */
    width: 115%; /* size label appropriate to the container */
    text-align: center;
    transform: scale(.5 .5);
}

p {
    text-indent: 30px;
    flex-direction: row;
    padding: .5%;
}

.container div {
    flex-direction: column;
    width: 46%;
    margin: 1%;
    flex-wrap: wrap;
    font-size: 4rem;
    text-align: center;
}

span a {
    color: var(--secondary-hightlight);
}

.portfolio-item:hover {     /* hover emphasis on portfolio items */
    opacity: 1; /* overrides normally faded items */
    transform: scale(1.01, 1.01); /* grows them slightly so that they noticeably move */
    box-shadow: 0 0 30px var(--primary-highlight); /* creates a glow around the items */
    border-radius: 20px; /* curves the glow around with the already curved border */
}


@media screen and (max-width: 600px) {
    
    /* {
        margin: 0;
        padding: 0;
        color: var(--text-light);
        opacity: 1;
        border: none;
        display: block;
    }*/

    header {        /* header contains h1, an image and also the nav */
        width: 100%; /* only 92% because below side padding */
        display: block; /* inline flex so stuff isn't growing to fit*/
        justify-content: center;
        text-align: center;
        background-color: var(--backgrounds);
        color: var(--text-light);
        border-bottom: 3px solid var(--secondary-hightlight); /* denotes end of header and beginning of content */
    }

    h1 {font-size: 4rem; 
        margin: 0;
        padding: 0; 
    }

    header img {
        max-height: 200px; /* limiting max dimensions of portrait */
        max-width: 200px;
        border-radius: 50%; /* circular image, like an avatar */
        margin: 0;
        padding: 0;
    }

    nav {
        margin: 0;
        padding: 0;
        width: 100%; /* nav does't want to be too big */
    }

    ul {
        display: inline-flex; /* making the list items go in-line */
        width: 100%; /* ul will take up entirety of nav */
        font-size: 2rem;
        list-style: none; /* delete bullets */
    }

    a {
        text-decoration: none; /* remove link underlines */
        color: var(--text-light); /* color font to contrast */
    }

    section {
        display: flex; /* allows us to manipulate content how we want */
        align-items: center; /* centers content within their containers */
        background-color: var(--backgrounds);
        color: var(--text-light);
        width: 100%; /* section will fit screen */
        margin: 0;
        padding: 0;
        border-bottom: 3px solid var(--secondary-hightlight); /* denotes end of one section and/or start of another */
    }

    .section-label {
        width: 18%; /* don't want section labels to take up too much space from content */
        font-size: 3rem; /* bigger text to clearly denote content */
        text-align: right; /* align with border */
        padding-right: 1%; /* space the label from the border a bit */
    }

    .portfolio-item {
        position: relative; /* necessary for child behaviors */
        margin: 1%; /* spacing between border and items */
        overflow: hidden; /* hides overflow, used for labels on items */
        flex-grow: 1; /* items will grow to fit entirely of width of flex space so there isn't big empty swathes on the page */
        max-height: 500px; /* limits size of items, gets overriden for the first item later */
        opacity: .6; /* overriden by hover, to give emphasis */
    }

    .container {
        display: flex; /* block display wouldn't work how we want */
        position: relative; /* necessary for child behaviors */
        flex-wrap: wrap; /* flex items force shrink primary or spill off page */
        margin: 0;
        padding: 0;
        width: 82%; /* the remainder of page after label */
        border-left: 3px solid var(--secondary-hightlight); /* denotes label from content */
        font-size: 2rem;
    }

    .portfolio-item img {
        display: block; /* gets rid of a empty space below image */
        border-radius: 20px; /* rounded edges */
    }

    .portfolio :nth-child(1) { /* don't want to affect anything beyond the first container */
        max-height: 100%; /* this one is special so it gets to have its full space */
        width: 100%; /* this one is special so it gets to have its full space */
    }

    .portfolio-item span {      /* labels for items */
        font-size: 2.5rem;
        position: absolute; /* absolute positioning and next two attributes to give it offset/overlap with image */
        top: 15%;
        left: -20%; /* my expectation here was to need to use a positive number to offset from left side but it seems to be offsetting from center. is this because item itself is centered? */
        background-color: var(--primary-highlight); /* label's color */
        color: var(--text-light); /* label's text color */
        transform: rotate(-30deg); /* rotate the label so it looks like a ribbon */
        width: 115%; /* size label appropriate to the container */
        text-align: center;
        transform: scale(.5 .5);
    }

    p {
        text-indent: 30px;
        flex-direction: row;
        padding: .5%;
    }

    .container div {
        flex-direction: column;
        width: 46%;
        margin: 1%;
        flex-wrap: wrap;
        font-size: 4rem;
        text-align: center;
    }
    span a {
        color: var(--secondary-hightlight);
    }

    .portfolio-item:hover {     /* hover emphasis on portfolio items */
        opacity: 1; /* overrides normally faded items */
        transform: scale(1.01, 1.01); /* grows them slightly so that they noticeably move */
        box-shadow: 0 0 30px var(--primary-highlight); /* creates a glow around the items */
        border-radius: 20px; /* curves the glow around with the already curved border */
    }

}